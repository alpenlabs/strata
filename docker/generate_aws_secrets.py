import json
import os

DIR = "configs"


OUTPUT_FILE = os.path.join(DIR, "aws_secrets.json")

# File to aws-secret-key mapping
file_mapping = {
    "jwt.fn.hex": "STRATA_FN_1_RETH_JWT_HEX",
    "jwt.hex": "STRATA_SEQUENCER_RETH_JWT_HEX",
    "sequencer.key.hex": "STRATA_SEQUENCER_KEY_HEX",
    "operator1.bin": "STRATA_OP_1_XPRIV",
    "operator2.bin": "STRATA_OP_2_XPRIV",
    "operator3.bin": "STRATA_OP_3_XPRIV",
    "operator4.bin": "STRATA_OP_4_XPRIV",
    "operator5.bin": "STRATA_OP_5_XPRIV",
}


secrets = {}

# Read and store file contents
for filename, aws_key in file_mapping.items():
    filepath = os.path.join(DIR, filename)
    if os.path.exists(filepath):
        with open(filepath, "r", encoding="utf-8") as f:
            secrets[aws_key] = f.read().strip()
    else:
        print(f"Warning: {filename} not found. Skipping...")

# Add static placeholders (to be replaced later by keys generated by scripts)
secrets.update(
    {
        "SIGNET_MINER_PRIVKEY": "placeholder",
        "SIGNET_MINER_RPC_PASSWORD": "placeholder",
        "RUNDLER_PRIVATE_KEY": "placeholder",
        "PROVER_MGR_SP1_PRIVATE_KEY": "placeholder",
        "TEMPO_S3_ACCESS_KEY": "placeholder",
        "TEMPO_S3_SECRET_KEY": "placeholder",
    }
)

# Save to JSON file
with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
    json.dump(secrets, f, indent=4)

print(f"AWS Secrets JSON saved to {OUTPUT_FILE}")
